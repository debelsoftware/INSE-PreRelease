DROP DATABASE IF EXISTS MAKER;
CREATE DATABASE MAKER;
USE MAKER;
CREATE TABLE USERS(
	userID VARCHAR(25) BINARY PRIMARY KEY,
	name VARCHAR(200),
	colour VARCHAR(7)
);

CREATE TABLE TEAMS(
	teamID VARCHAR(20) BINARY NOT NULL PRIMARY KEY,
	name VARCHAR(20)
);

CREATE TABLE USERTEAMS(
	userID VARCHAR(25) BINARY NOT NULL,
	teamID VARCHAR(20) BINARY,
	verified BOOLEAN,
	isAdmin BOOLEAN,
	hasNotif BOOLEAN,
	FOREIGN KEY (userID) REFERENCES USERS(userID) ON DELETE CASCADE,
	FOREIGN KEY (teamID) REFERENCES TEAMS(teamID) ON DELETE CASCADE,
	UNIQUE (userID,teamID)
);

CREATE TABLE TASKS(
	taskID VARCHAR(15) BINARY NOT NULL PRIMARY KEY,
	teamID VARCHAR(20) BINARY,
	name VARCHAR(20),
	details VARCHAR(1000),
	dateSet BIGINT,
	dateDue BIGINT,
	FOREIGN KEY (teamID) REFERENCES TEAMS(teamID) ON DELETE CASCADE
);

CREATE TABLE FILES(
	fileID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	taskID VARCHAR(15) BINARY,
	name VARCHAR(50),
	url VARCHAR(500) BINARY,
	FOREIGN KEY (taskID) REFERENCES TASKS(taskID) ON DELETE CASCADE
);

CREATE TABLE MESSAGE(
	messageID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	messageTime BIGINT,
	messageText TEXT,
	userID VARCHAR(25) BINARY,
	teamID VARCHAR(30) BINARY,
	FOREIGN KEY (userID) REFERENCES USERS(userID) ON DELETE CASCADE,
	FOREIGN KEY (teamID) REFERENCES TEAMS(teamID) ON DELETE CASCADE
);

CREATE TABLE USERTASKS(
	PRIMARY KEY (userID,taskID),
	userID VARCHAR(25) BINARY,
	taskID VARCHAR(15) BINARY,
	FOREIGN KEY (userID) REFERENCES USERS(userID) ON DELETE CASCADE,
	FOREIGN KEY (taskID) REFERENCES TASKS(taskID) ON DELETE CASCADE
);

CREATE TABLE NOTIFICATIONS(
	notificationID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	notificationName VARCHAR(25),
	details VARCHAR(500),
	teamID VARCHAR(30) BINARY,
	dateCreated BIGINT,
	FOREIGN KEY (teamID) REFERENCES TEAMS(teamID) ON DELETE CASCADE
);
